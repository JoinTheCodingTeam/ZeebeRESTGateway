# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from zeebe_rest_gateway.spec import gateway_pb2 as zeebe__rest__gateway_dot_spec_dot_gateway__pb2


class GatewayStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PublishMessage = channel.unary_unary(
                '/gateway_protocol.Gateway/PublishMessage',
                request_serializer=zeebe__rest__gateway_dot_spec_dot_gateway__pb2.PublishMessageRequest.SerializeToString,
                response_deserializer=zeebe__rest__gateway_dot_spec_dot_gateway__pb2.PublishMessageResponse.FromString,
                )
        self.ActivateJobs = channel.unary_stream(
                '/gateway_protocol.Gateway/ActivateJobs',
                request_serializer=zeebe__rest__gateway_dot_spec_dot_gateway__pb2.ActivateJobsRequest.SerializeToString,
                response_deserializer=zeebe__rest__gateway_dot_spec_dot_gateway__pb2.ActivateJobsResponse.FromString,
                )


class GatewayServicer(object):
    """Missing associated documentation comment in .proto file."""

    def PublishMessage(self, request, context):
        """
        Publishes a single message. Messages are published to specific partitions computed from their correlation keys.
        Errors:
        ALREADY_EXISTS:
        - a message with the same ID was previously published (and is still alive)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ActivateJobs(self, request, context):
        """
        Iterates through all known partitions round-robin and activates up to the requested
        maximum and streams them back to the client as they are activated.
        Errors:
        INVALID_ARGUMENT:
        - type is blank (empty string, null)
        - worker is blank (empty string, null)
        - timeout less than 1
        - maxJobsToActivate is less than 1
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GatewayServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PublishMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.PublishMessage,
                    request_deserializer=zeebe__rest__gateway_dot_spec_dot_gateway__pb2.PublishMessageRequest.FromString,
                    response_serializer=zeebe__rest__gateway_dot_spec_dot_gateway__pb2.PublishMessageResponse.SerializeToString,
            ),
            'ActivateJobs': grpc.unary_stream_rpc_method_handler(
                    servicer.ActivateJobs,
                    request_deserializer=zeebe__rest__gateway_dot_spec_dot_gateway__pb2.ActivateJobsRequest.FromString,
                    response_serializer=zeebe__rest__gateway_dot_spec_dot_gateway__pb2.ActivateJobsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'gateway_protocol.Gateway', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Gateway(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def PublishMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gateway_protocol.Gateway/PublishMessage',
            zeebe__rest__gateway_dot_spec_dot_gateway__pb2.PublishMessageRequest.SerializeToString,
            zeebe__rest__gateway_dot_spec_dot_gateway__pb2.PublishMessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ActivateJobs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/gateway_protocol.Gateway/ActivateJobs',
            zeebe__rest__gateway_dot_spec_dot_gateway__pb2.ActivateJobsRequest.SerializeToString,
            zeebe__rest__gateway_dot_spec_dot_gateway__pb2.ActivateJobsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
